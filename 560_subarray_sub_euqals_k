"""
560. Subarray Sum Equals K
Given an array of integers nums and an integer k, return the total number of subarrays whose sum equals to k.
A subarray is a contiguous non-empty sequence of elements within an array.
Example 1:
  Input: nums = [1,1,1], k = 2
  Output: 2
Example 2:
  Input: nums = [1,2,3], k = 3
  Output: 2
"""
# use prefixsum to reduce time complexity to O(n) 
class Solution1:
    def subarraySum(self, nums: List[int], k: int) -> int:
        res = 0
        curSum = 0
        /*{sum: count}*/
        prefixSums = {0:1}
        for n in nums:
            curSum += n
            diff = curSum - k
            res += prefixSums.get(diff, 0)
            prefixSums[curSum] = 1 + prefixSums.get(curSum, 0)
        return res

class Solution2:
    def subarraySum(self, nums: List[int], k: int) -> int:
        d = {}
        acc = count = 0
        for num in nums:
            acc += num
            if acc == k:
                count += 1
            if acc - k in d:
                count += d[acc-k]
            if acc in d:
                d[acc] += 1
            else:
                d[acc] = 1
        return count
