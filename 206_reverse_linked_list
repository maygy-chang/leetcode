"""
206. Reverse Linked List
Given the head of a singly linked list, reverse the list, and return the reversed list.
Example 1:
  Input: head = [1,2,3,4,5]
  Output: [5,4,3,2,1]
Example 2:
  Input: head = [1,2]
  Output: [2,1]
Example 3:
  Input: head = []
  Output: []

------------------------------------------------------------------------------------------------------
        |  0th        | 1th         |2th           |3th          | 4th            | 5th    
------------------------------------------------------------------------------------------------------
prev    |  None       |  [1]        | [2, 1]       | [3, 2, 1]   |  [4, 3, 2, 1]  | [5, 4, 3, 2, 1]
------------------------------------------------------------------------------------------------------
current | [1,2,3,4,5] | [2,3,4,5]   | [3, 4, 5]    | [4, 5]      |  [5]           | None
------------------------------------------------------------------------------------------------------
Next    |             | None        | [1]          | [2, 1]      |  [3, 2, 1]     | [4, 3, 2, 1]
------------------------------------------------------------------------------------------------------
temp    |             | [2,3,4,5]   | [3,4,5]      | [4, 5]      | [5]            |  None
------------------------------------------------------------------------------------------------------

"""
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

class Solution:

    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        prev = None
        current = head
        while current:
            temp = current.next
            current.next = prev
            prev = current
            current = temp
        return prev
