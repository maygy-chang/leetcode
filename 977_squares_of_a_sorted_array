"""
977. Squares of a Sorted Array
Given an integer array nums sorted in non-decreasing order, return an array of the squares of each number sorted in non-decreasing order.
Example 1:
  Input: nums = [-4,-1,0,3,10]
  Output: [0,1,9,16,100]
  Explanation: After squaring, the array becomes [16,1,0,9,100].
  After sorting, it becomes [0,1,9,16,100].
Example 2:
  Input: nums = [-7,-3,2,3,11]
  Output: [4,9,9,49,121]
"""
class Solution:
    # 利用BS去找出相對應的index
    def binary_search(self, data_list, target):
        left = 0
        right = len(data_list) - 1
        while left <= right:
            medium = (left + right) // 2
            value = data_list[medium]
            if value == target:
                return medium
            elif target > value:
                left = medium + 1
            else: 
                right = medium - 1
        return left

    def sortedSquares(self, nums: List[int]) -> List[int]:
        data_list = []
        last_value = -1
        for i, v in enumerate(nums):
            value = v * v
            if data_list:
                # 第二次以上，根據數值，找出相對應的index，再插入陣列
                index = self.binary_search(data_list, value)
                data_list.insert(index, value)
            else:
                # 第一次 先塞值
                data_list.append(value)
        return data_list

