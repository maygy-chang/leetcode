"""
1. Two Sum
Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
You may assume that each input would have exactly one solution, and you may not use the same element twice.
You can return the answer in any order.
Example 1:
  Input: nums = [2,7,11,15], target = 9
  Output: [0,1]
  Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].
Example 2:
  Input: nums = [3,2,4], target = 6
  Output: [1,2]
Example 3:
  Input: nums = [3,3], target = 6
  Output: [0,1]
"""
# 倘若陣列中兩數相加為target，則表示一值為X，則另一值為target - X，且兩數同時存在陣列-nums中
class Solution1:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        result = []
        for index, value in enumerate(nums):
            remain = target - value
            if remain in nums:
                remain_index = nums.index(remain)
                result = [index, remain_index]
        return result
/**/
class Solution2:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        result = []
        for i in range(len(nums)):
            value = nums[i]
            another = target - value
            if another in nums[i+1:]:
                index = nums[i+1:].index(another)+i+1
                result = [i, index]
                break
        return result
