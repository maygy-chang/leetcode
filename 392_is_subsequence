"""
392. Is Subsequence
Given two strings s and t, return true if s is a subsequence of t, or false otherwise.
A subsequence of a string is a new string that is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (i.e., "ace" is a subsequence of "abcde" while "aec" is not).
Example 1:
  Input: s = "abc", t = "ahbgdc"
  Output: true
Example 2:
  Input: s = "axc", t = "ahbgdc"
  Output: false
"""
# 解題關鍵: 子序列: 字元連續而且包含在該序列裡面，用兩個指標去移動，用短的去比對長的序列
# --------------------------------------------------
#  i    | 0      | 1      | 1      |2      |3 
# --------------------------------------------------
#  j    | 0      | 1      | 2      |3      |
# --------------------------------------------------
#  s[i] | s[0]=a | s[1]=b | s[1]=b |s[2]=c |
# --------------------------------------------------
#  t[j] | t[0]=a | t[1]=h | t[2]=b |t[3]=b |
# --------------------------------------------------
class Solution:
    def isSubsequence(self, s: str, t: str) -> bool:
        i = 0
        j = 0
        while i < len(s) and j < len(t):
            if s[i] == t[j]:
                i += 1
            j += 1
        return True if i == len(s) else False
